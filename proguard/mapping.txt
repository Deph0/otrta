android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.widget.DrawerLayout mDrawerLayout -> c
    boolean mDrawerIndicatorEnabled -> d
    android.graphics.drawable.Drawable mThemeImage -> e
    android.graphics.drawable.Drawable mDrawerImage -> f
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> g
    int mDrawerImageResource -> h
    int mOpenDrawerContentDescRes -> i
    int mCloseDrawerContentDescRes -> j
    java.lang.Object mSetIndicatorInfo -> k
    void syncState() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.f:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    float mOffsetBy -> c
    android.graphics.Rect mTmpRect -> d
    void setOffset(float) -> a
    float getOffset() -> a
    void setOffsetBy(float) -> b
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.g:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.h:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.i:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.j:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.k:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.l:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.m:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismiss() -> a
    void dismissInternal(boolean) -> a
    android.app.Dialog getDialog() -> b
    int getTheme() -> c
    void onAttach(android.app.Activity) -> a
    void onDetach() -> d
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> e
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> f
    void onDestroyView() -> g
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> i
    android.support.v4.app.FragmentActivity getActivity() -> j
    android.content.res.Resources getResources() -> k
    android.support.v4.app.FragmentManager getFragmentManager() -> l
    boolean isAdded() -> m
    boolean isDetached() -> n
    boolean isHidden() -> o
    void onHiddenChanged(boolean) -> b
    void setHasOptionsMenu(boolean) -> c
    boolean getUserVisibleHint() -> p
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> q
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> e
    void onResume() -> r
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> s
    void onStop() -> f
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> g
    void onDestroy() -> t
    void initState() -> u
    void onDetach() -> d
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> v
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> w
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> x
    void performResume() -> y
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> z
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> A
    void performStop() -> B
    void performReallyStop() -> C
    void performDestroyView() -> D
    void performDestroy() -> E
android.support.v4.app.Fragment$1 -> android.support.v4.app.n:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.o:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.p:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.q:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.s:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.t:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.u:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.v:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.w:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.x:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    boolean popBackStackImmediate(java.lang.String,int) -> a
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.z:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.aa:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ab:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ac:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ad:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ae:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.af:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ag:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ah:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.ai:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.aj:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ak:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.al:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.am:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.an:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ao:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ap:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aq:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ar:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> b
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.as:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.at:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.au:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.av:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.aw:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.ax:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.ay:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.az:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ba:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bb:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bc:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.am:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.an:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ao:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ap:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aq:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ar:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    android.view.ViewParent getParentForAccessibility(android.view.View) -> e
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.as:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.at:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.au:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.av:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> b
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.aw:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ax:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ay:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.az:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ba:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bb:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bc:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bd:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.be:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bf:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bg:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bh:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bi:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bj:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bk:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bl:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bn:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isFocusable() -> c
    void setFocusable(boolean) -> a
    boolean isFocused() -> d
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> e
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> f
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> g
    void setSelected(boolean) -> e
    boolean isClickable() -> h
    void setClickable(boolean) -> f
    boolean isLongClickable() -> i
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> j
    void setEnabled(boolean) -> h
    java.lang.CharSequence getPackageName() -> k
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> l
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getContentDescription() -> m
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> n
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    boolean isClickable(java.lang.Object) -> f
    boolean isEnabled(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> h
    boolean isFocused(java.lang.Object) -> i
    boolean isLongClickable(java.lang.Object) -> j
    boolean isSelected(java.lang.Object) -> k
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> l
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isFocusable(java.lang.Object) -> h
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> i
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> m
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> n
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    boolean isSelected(java.lang.Object) -> k
    void setSelected(java.lang.Object,boolean) -> f
    boolean isClickable(java.lang.Object) -> f
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> j
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> g
    void setEnabled(java.lang.Object,boolean) -> b
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> l
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> m
    void setVisibleToUser(java.lang.Object,boolean) -> g
    boolean isAccessibilityFocused(java.lang.Object) -> n
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    boolean isClickable(java.lang.Object) -> f
    boolean isEnabled(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> h
    boolean isFocused(java.lang.Object) -> i
    boolean isVisibleToUser(java.lang.Object) -> m
    boolean isAccessibilityFocused(java.lang.Object) -> n
    boolean isLongClickable(java.lang.Object) -> j
    boolean isSelected(java.lang.Object) -> k
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> g
    void setAccessibilityFocused(java.lang.Object,boolean) -> h
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> l
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    boolean isClickable(java.lang.Object) -> f
    boolean isEnabled(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> h
    boolean isFocused(java.lang.Object) -> i
    boolean isLongClickable(java.lang.Object) -> j
    boolean isSelected(java.lang.Object) -> k
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setSelected(java.lang.Object,boolean) -> f
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> l
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.g:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.o:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> d
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> e
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> f
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.f:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.l:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.m:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.p:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.q:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean hasOpaqueBackground(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.r:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.s:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.t:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.y:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aa:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> f
    void ensureMotionHistorySizeForId(int) -> g
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    boolean isEdgeTouched(int) -> e
    boolean isEdgeTouched(int,int) -> c
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> d
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> e
    int getEdgesTouched(int,int) -> f
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ad:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.nibdev.otrtav2.R -> com.nibdev.otrtav2.a:
com.nibdev.otrtav2.R$styleable -> com.nibdev.otrtav2.b:
    int[] DragSortListView -> DragSortListView
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_fling_handle_id -> DragSortListView_fling_handle_id
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
    int[] HoloCircularProgressBar -> HoloCircularProgressBar
    int HoloCircularProgressBar_gravity -> HoloCircularProgressBar_gravity
    int HoloCircularProgressBar_marker_progress -> HoloCircularProgressBar_marker_progress
    int HoloCircularProgressBar_progress -> HoloCircularProgressBar_progress
    int HoloCircularProgressBar_progress_background_color -> HoloCircularProgressBar_progress_background_color
    int HoloCircularProgressBar_progress_color -> HoloCircularProgressBar_progress_color
    int HoloCircularProgressBar_stroke_width -> HoloCircularProgressBar_stroke_width
    int[] Theme -> Theme
    int Theme_circularProgressBarStyle -> Theme_circularProgressBarStyle
com.nibdev.otrtav2.activities.ActivityAllOff -> com.nibdev.otrtav2.activities.ActivityAllOff:
    android.widget.TextView mTvStatus -> n
    android.widget.ProgressBar mPbSend -> o
    android.widget.Button mBtCancel -> p
    com.nibdev.otrtav2.activities.ActivityAllOff$LoadCodesTask mLoadCodeTask -> q
    com.nibdev.otrtav2.activities.ActivityAllOff$SendCodesTask mSendCodeTask -> r
    boolean mServiceBound -> s
    com.nibdev.otrtav2.service.OTRTAService mService -> t
    com.nibdev.otrtav2.activities.ActivityAllOff$DuplicateFilter mDataFilter -> u
    android.content.ServiceConnection mConnection -> v
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(com.nibdev.otrtav2.service.OTRTAService) -> a
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void access$0(com.nibdev.otrtav2.activities.ActivityAllOff,com.nibdev.otrtav2.service.OTRTAService) -> a
    void access$1(com.nibdev.otrtav2.activities.ActivityAllOff,boolean) -> a
    android.widget.ProgressBar access$2(com.nibdev.otrtav2.activities.ActivityAllOff) -> a
    android.widget.TextView access$3(com.nibdev.otrtav2.activities.ActivityAllOff) -> b
    com.nibdev.otrtav2.activities.ActivityAllOff$DuplicateFilter access$4(com.nibdev.otrtav2.activities.ActivityAllOff) -> c
    com.nibdev.otrtav2.service.OTRTAService access$5(com.nibdev.otrtav2.activities.ActivityAllOff) -> d
    void access$6(com.nibdev.otrtav2.activities.ActivityAllOff,com.nibdev.otrtav2.activities.ActivityAllOff$DuplicateFilter) -> a
    void access$7(com.nibdev.otrtav2.activities.ActivityAllOff,com.nibdev.otrtav2.activities.ActivityAllOff$SendCodesTask) -> a
    com.nibdev.otrtav2.activities.ActivityAllOff$SendCodesTask access$8(com.nibdev.otrtav2.activities.ActivityAllOff) -> e
com.nibdev.otrtav2.activities.ActivityAllOff$1 -> com.nibdev.otrtav2.activities.a:
    com.nibdev.otrtav2.activities.ActivityAllOff this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.nibdev.otrtav2.activities.ActivityAllOff$2 -> com.nibdev.otrtav2.activities.b:
    com.nibdev.otrtav2.activities.ActivityAllOff this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.activities.ActivityAllOff$DuplicateFilter -> com.nibdev.otrtav2.activities.c:
    java.util.List mFilteredCodes -> a
    java.util.List getFiltered() -> a
com.nibdev.otrtav2.activities.ActivityAllOff$LoadCodesTask -> com.nibdev.otrtav2.activities.d:
    com.nibdev.otrtav2.activities.ActivityAllOff this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nibdev.otrtav2.activities.ActivityAllOff$SendCodesTask -> com.nibdev.otrtav2.activities.e:
    com.nibdev.otrtav2.activities.ActivityAllOff this$0 -> a
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.Integer[]) -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.nibdev.otrtav2.activities.ActivityMain -> com.nibdev.otrtav2.activities.ActivityMain:
    boolean mServiceBound -> n
    android.support.v4.widget.DrawerLayout mDrawerLayout -> o
    android.widget.ListView mDrawerList -> p
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> q
    com.nibdev.otrtav2.view.adapters.DrawerAdapter mDrawerAdapter -> r
    com.nibdev.otrtav2.view.custom.ProgressMessageBar mSyncProgressBar -> s
    boolean mInitDone -> t
    com.nibdev.otrtav2.activities.ActivityMain$OnBackKeyListener mBackKeyListener -> u
    android.widget.AdapterView$OnItemClickListener mOnNavigationClickListener -> v
    android.content.ServiceConnection mConnection -> w
    void onCreate(android.os.Bundle) -> onCreate
    void checkCopyMyDb() -> f
    void checkUnzipDb2() -> g
    void onServiceConnected(com.nibdev.otrtav2.service.OTRTAService) -> a
    void initDrawer() -> h
    void onStart() -> onStart
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setOnBackKeyListener(com.nibdev.otrtav2.activities.ActivityMain$OnBackKeyListener) -> a
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void handleException(java.lang.Exception,boolean) -> a
    void updateCheck() -> i
    void showUpdateInfo() -> j
    com.nibdev.otrtav2.view.adapters.DrawerAdapter access$0(com.nibdev.otrtav2.activities.ActivityMain) -> a
    android.support.v4.widget.DrawerLayout access$1(com.nibdev.otrtav2.activities.ActivityMain) -> b
    android.widget.ListView access$2(com.nibdev.otrtav2.activities.ActivityMain) -> c
    void access$3(com.nibdev.otrtav2.activities.ActivityMain,com.nibdev.otrtav2.service.OTRTAService) -> a
    void access$4(com.nibdev.otrtav2.activities.ActivityMain,boolean) -> a
    void access$5(com.nibdev.otrtav2.activities.ActivityMain) -> d
com.nibdev.otrtav2.activities.ActivityMain$1 -> com.nibdev.otrtav2.activities.f:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.activities.ActivityMain$2 -> com.nibdev.otrtav2.activities.g:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.nibdev.otrtav2.activities.ActivityMain$3 -> com.nibdev.otrtav2.activities.h:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.activities.ActivityMain$4 -> com.nibdev.otrtav2.activities.i:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.nibdev.otrtav2.activities.ActivityMain$5 -> com.nibdev.otrtav2.activities.j:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerOpened(android.view.View) -> a
com.nibdev.otrtav2.activities.ActivityMain$6 -> com.nibdev.otrtav2.activities.k:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void run() -> run
    com.nibdev.otrtav2.activities.ActivityMain access$0(com.nibdev.otrtav2.activities.ActivityMain$6) -> a
com.nibdev.otrtav2.activities.ActivityMain$6$1 -> com.nibdev.otrtav2.activities.l:
    com.nibdev.otrtav2.activities.ActivityMain$6 this$1 -> a
    void run() -> run
com.nibdev.otrtav2.activities.ActivityMain$7 -> com.nibdev.otrtav2.activities.m:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.activities.ActivityMain$8 -> com.nibdev.otrtav2.activities.n:
    com.nibdev.otrtav2.activities.ActivityMain this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.activities.ActivityMain$OnBackKeyListener -> com.nibdev.otrtav2.activities.o:
    boolean handlesBackKey() -> a
com.nibdev.otrtav2.activities.ActivitySelectCode -> com.nibdev.otrtav2.activities.ActivitySelectCode:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog mCodeSelectFrag -> n
    java.lang.String mChangingButtonName -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.String access$0(com.nibdev.otrtav2.activities.ActivitySelectCode) -> a
com.nibdev.otrtav2.activities.ActivitySelectCode$1 -> com.nibdev.otrtav2.activities.p:
    com.nibdev.otrtav2.activities.ActivitySelectCode this$0 -> a
    void selectedCodeChanged(int) -> a
com.nibdev.otrtav2.activities.ActivitySelectCode$2 -> com.nibdev.otrtav2.activities.q:
    com.nibdev.otrtav2.activities.ActivitySelectCode this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.nibdev.otrtav2.activities.ActivitySendByUri -> com.nibdev.otrtav2.activities.ActivitySendByUri:
    void onCreate(android.os.Bundle) -> onCreate
com.nibdev.otrtav2.activities.ActivitySettings -> com.nibdev.otrtav2.activities.ActivitySettings:
    com.nibdev.otrtav2.service.OTRTAService mService -> a
    boolean mServiceBound -> b
    android.content.ServiceConnection mConnection -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onServiceConnected(com.nibdev.otrtav2.service.OTRTAService) -> a
    void access$0(com.nibdev.otrtav2.activities.ActivitySettings,com.nibdev.otrtav2.service.OTRTAService) -> a
    void access$1(com.nibdev.otrtav2.activities.ActivitySettings,boolean) -> a
com.nibdev.otrtav2.activities.ActivitySettings$1 -> com.nibdev.otrtav2.activities.r:
    com.nibdev.otrtav2.activities.ActivitySettings this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.nibdev.otrtav2.activities.ActivityUserLayout -> com.nibdev.otrtav2.activities.ActivityUserLayout:
    void onCreate(android.os.Bundle) -> onCreate
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings -> com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings:
    android.widget.Spinner mSpnType -> n
    android.widget.Spinner mSpnSel2 -> o
    android.widget.Spinner mSpnSel3 -> p
    android.widget.Spinner mSpnSel4 -> q
    android.widget.Button mBtOkay -> r
    com.nibdev.otrtav2.view.adapters.VendorSelectSpinnerAdapter mVendorAdapter -> s
    java.util.List mTypeNames -> t
    java.util.List mTypes -> u
    com.nibdev.otrtav2.service.OTRTAService mService -> v
    boolean mServiceBound -> w
    int mAppWidgetId -> x
    android.content.SharedPreferences mWidgetPrefs -> y
    com.nibdev.otrtav2.widgets.SingleWidgetConfiguration mWidgetConfig -> z
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$LastConfig mRestoreData -> A
    android.widget.AdapterView$OnItemSelectedListener mOnTypeSelectedListener -> B
    android.widget.AdapterView$OnItemSelectedListener mOnVendorSelectedListener -> C
    android.widget.AdapterView$OnItemSelectedListener mOnModelSelectedListener -> D
    android.widget.AdapterView$OnItemSelectedListener mOnCodeSelectedListener -> E
    android.widget.AdapterView$OnItemSelectedListener mOnScriptSelectedListener -> F
    android.view.View$OnClickListener mOnOkClickListener -> G
    android.content.ServiceConnection mConnection -> H
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onServiceConnected(com.nibdev.otrtav2.service.OTRTAService) -> a
    void initLoadData() -> f
    void initView() -> g
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$LastConfig createLastConfig() -> h
    java.util.List access$0(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> a
    com.nibdev.otrtav2.widgets.SingleWidgetConfiguration access$1(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> b
    android.widget.Spinner access$2(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> c
    android.widget.Spinner access$3(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> d
    android.widget.Spinner access$4(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> e
    com.nibdev.otrtav2.view.adapters.VendorSelectSpinnerAdapter access$5(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> f
    android.widget.AdapterView$OnItemSelectedListener access$6(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> g
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$LastConfig access$7(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> h
    android.widget.Button access$8(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> i
    com.nibdev.otrtav2.service.OTRTAService access$9(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> j
    android.widget.AdapterView$OnItemSelectedListener access$10(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> k
    android.widget.AdapterView$OnItemSelectedListener access$11(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> l
    android.widget.AdapterView$OnItemSelectedListener access$12(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> m
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$LastConfig access$13(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> n
    android.content.SharedPreferences access$14(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> o
    int access$15(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> p
    void access$16(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings,com.nibdev.otrtav2.service.OTRTAService) -> a
    void access$17(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings,boolean) -> a
    void access$18(com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings) -> q
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$1 -> com.nibdev.otrtav2.activities.s:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$2 -> com.nibdev.otrtav2.activities.t:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$3 -> com.nibdev.otrtav2.activities.u:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$4 -> com.nibdev.otrtav2.activities.v:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$5 -> com.nibdev.otrtav2.activities.w:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$6 -> com.nibdev.otrtav2.activities.x:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$7 -> com.nibdev.otrtav2.activities.y:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$8 -> com.nibdev.otrtav2.activities.z:
    com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings this$0 -> a
    void run() -> run
com.nibdev.otrtav2.activities.ActivityWidgetSingleSettings$LastConfig -> com.nibdev.otrtav2.activities.aa:
    java.lang.Long sel1Id -> a
    java.lang.Long sel2Id -> b
    java.lang.Long sel3Id -> c
com.nibdev.otrtav2.model.NQ -> com.nibdev.otrtav2.model.a:
    android.os.Handler mLooperHandler -> a
    android.view.View v(android.view.View,int,java.lang.Class) -> a
    android.preference.Preference pref(android.preference.PreferenceFragment,int,java.lang.Class) -> a
    int etPrefToInt(android.preference.EditTextPreference,int,int,int) -> a
    float etPrefToFloat(android.preference.EditTextPreference,float,float,float) -> a
    void safeSleep(int) -> a
    void safeJoin(java.lang.Thread,long) -> a
    android.view.View baseAdaptViewInit(android.view.View,android.view.ViewGroup,int) -> a
    void onUiThread(java.lang.Runnable) -> a
com.nibdev.otrtav2.model.Statics -> com.nibdev.otrtav2.model.b:
    android.content.Context RefContext -> a
com.nibdev.otrtav2.model.database.DB2 -> com.nibdev.otrtav2.model.a.a:
    android.database.sqlite.SQLiteDatabase mDb -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDestroy() -> a
    java.util.List getSortedVendorsForDeviceType(int) -> a
    java.lang.String getVendorNameByVendorId(int) -> b
    java.util.List getCodeSetsForVendor(int,int) -> a
    java.util.List getCodesForCodeSetId(int) -> c
    java.lang.String getCodeNameForCodeType(int) -> d
com.nibdev.otrtav2.model.database.DBLocal -> com.nibdev.otrtav2.model.a.b:
    java.util.HashSet mListeners -> k
    android.database.sqlite.SQLiteDatabase mDb -> l
    com.nibdev.otrtav2.model.database.DBLocalHelper mHelper -> m
    com.nibdev.otrtav2.model.tools.LowerStringComparator mLowerStringComparator -> n
    java.lang.String TVENDORCREATE -> a
    java.lang.String TMODELSCREATE -> b
    java.lang.String TDEVICETYPESCREATE -> c
    java.lang.String TCODETYPESCREATE -> d
    java.lang.String TCODESCREATE -> e
    java.lang.String TCODEALLOCATIONSCREATE -> f
    java.lang.String TCODETYPEMAPPINGSCREATE -> g
    java.lang.String TSCRIPTSCREATE -> h
    java.lang.String TBUTTONMAPPINGCREATE -> i
    java.lang.String QUERY_VENDOR_MODELCOUNT -> j
    void addOnNewLocalDataListener(com.nibdev.otrtav2.model.database.DBLocal$OnNewLocalDataListener) -> a
    void notifyListeners() -> p
    void notifyYourListeners() -> a
    void onDestroy() -> b
    java.util.List getAllScripts() -> c
    java.util.TreeMap getSortedScripts() -> d
    com.nibdev.otrtav2.model.scripts.Script getScriptById(int) -> a
    java.lang.String getScriptNameById(int) -> b
    void deleteScript(com.nibdev.otrtav2.model.scripts.Script) -> a
    void saveUpdateScript(com.nibdev.otrtav2.model.scripts.Script) -> b
    int getButtonAllocation(java.lang.String) -> a
    void saveButtonAllocation(java.lang.String,int) -> a
    int getHighestID_SQL(java.lang.String) -> b
    int getLowestID_SQL(java.lang.String) -> c
    int getCount_SQL(java.lang.String) -> d
    int getCount_SQL(java.lang.String,java.lang.String,java.lang.String[]) -> a
    android.util.SparseArray getCodeTypeMappings() -> e
    int getDeviceTypeForModelId(int) -> c
    java.util.TreeMap getSortedVendors() -> f
    java.util.TreeMap getSortedDeviceTypes() -> g
    java.util.TreeMap getSortedCodeTypes() -> h
    java.util.TreeMap getSortedModels() -> i
    java.util.List getVendorsWithModelCounts() -> j
    java.util.List getVendors() -> k
    int getVendorIdByModelId(int) -> d
    java.util.List getCodeAllocationsForModelId(int) -> e
    java.util.List getModels(java.lang.String,java.lang.String[]) -> a
    java.util.HashMap getModelsWithDeviceTypedAndCodeCount(int) -> f
    java.lang.String getModelNameAndCodeTypeNameByCodeAllocationId(int) -> g
    java.util.Map getModelFromCodeAllocationId(int) -> h
    android.util.SparseArray getDeviceTypes() -> l
    android.util.SparseArray getCodeTypes() -> m
    com.nibdev.otrtav2.model.jdata.Code getCodeById(int) -> i
    com.nibdev.otrtav2.model.jdata.Code getCodeByCodeAllocationId(int) -> j
    java.util.List getCodesByCodeTypeId(int) -> k
    void deleteGaps(com.nibdev.otrtav2.model.jdata.FSInfoResponse) -> a
    int deleteCodeAllocation(int) -> l
    void addVendors(java.util.List) -> a
    void addModels(java.util.List) -> b
    void addDeviceTypes(java.util.List) -> c
    void addCodeTypes(java.util.List) -> d
    void addCodes(java.util.List) -> e
    void addCodeAllocations(java.util.List) -> f
    void addCodeTypeMappings(java.util.List) -> g
    void checkUploadResult(com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData) -> a
    void purge() -> n
    java.util.HashSet access$0() -> o
com.nibdev.otrtav2.model.database.DBLocal$1 -> com.nibdev.otrtav2.model.a.c:
    com.nibdev.otrtav2.model.database.DBLocal this$0 -> a
    void run() -> run
com.nibdev.otrtav2.model.database.DBLocal$OnNewLocalDataListener -> com.nibdev.otrtav2.model.a.d:
    void onNewData() -> a
com.nibdev.otrtav2.model.database.DBLocalHelper -> com.nibdev.otrtav2.model.a.e:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void createAllTables(android.database.sqlite.SQLiteDatabase) -> a
com.nibdev.otrtav2.model.database.DBRemote -> com.nibdev.otrtav2.model.a.f:
    com.nibdev.otrtav2.model.database.DBRemote _instance -> a
    java.util.HashSet mSyncListeners -> b
    com.nibdev.otrtav2.model.database.DBRemote$FullSyncThread mSyncThread -> c
    com.nibdev.otrtav2.model.database.DBRemote getInstance() -> a
    void addSyncListener(com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks) -> a
    void removeSyncListener(com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks) -> b
    void updateSyncStatus(com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState,int,int,java.lang.String) -> a
    void startFullSyncThread() -> b
    void cancelFullSyncThread() -> c
    boolean checkConnection() -> d
    void downloadNewVendors(java.util.List) -> a
    void downloadNewModels(java.util.List) -> b
    void downloadNewDeviceTypes(java.util.List) -> c
    void downloadNewCodeTypes(java.util.List) -> d
    void downloadNewCodes(java.util.List) -> e
    void downloadNewCodeAllocations(java.util.List) -> f
    void downloadNewCodeTypeMappings(java.util.List) -> g
    int uploadNewModel(com.nibdev.otrtav2.model.jdata.Model) -> a
    int uploadNewVendor(com.nibdev.otrtav2.model.jdata.Vendor) -> a
    int uploadNewCodeAllocation(com.nibdev.otrtav2.model.jdata.CodeAllocation) -> a
    int uploadNewCode(com.nibdev.otrtav2.model.jdata.Code) -> a
    java.util.List createIDList(int[][]) -> a
    void access$0(com.nibdev.otrtav2.model.database.DBRemote,com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState,int,int,java.lang.String) -> a
    java.util.List access$1(com.nibdev.otrtav2.model.database.DBRemote,int[][]) -> a
    void access$2(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> a
    void access$3(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> b
    void access$4(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> c
    void access$5(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> d
    void access$6(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> e
    void access$7(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> f
    void access$8(com.nibdev.otrtav2.model.database.DBRemote,java.util.List) -> g
    java.util.HashSet access$9(com.nibdev.otrtav2.model.database.DBRemote) -> a
com.nibdev.otrtav2.model.database.DBRemote$1 -> com.nibdev.otrtav2.model.a.g:
    com.nibdev.otrtav2.model.database.DBRemote this$0 -> a
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState val$state -> b
    int val$total -> c
    int val$progress -> d
    java.lang.String val$info -> e
    void run() -> run
com.nibdev.otrtav2.model.database.DBRemote$FullSyncThread -> com.nibdev.otrtav2.model.a.h:
    boolean _cancelRequest -> b
    com.nibdev.otrtav2.model.database.DBRemote this$0 -> a
    void requestCancel() -> a
    void run() -> run
com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks -> com.nibdev.otrtav2.model.a.i:
    void onSyncStatusUpdate(com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState,int,int,java.lang.String) -> a
com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState -> com.nibdev.otrtav2.model.a.j:
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState STARTED -> a
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState RUNNING -> b
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState FINISHED -> c
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState ERROR -> d
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState[] ENUM$VALUES -> e
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState[] values() -> values
    com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState valueOf(java.lang.String) -> valueOf
com.nibdev.otrtav2.model.jdata.Code -> com.nibdev.otrtav2.model.b.a:
    int mID -> a
    com.nibdev.otrtav2.service.IrDataCompat mData -> b
    java.lang.String mDataString -> c
    int getID() -> a
    void setID(int) -> a
    com.nibdev.otrtav2.service.IrDataCompat getData() -> b
    java.lang.String getDataAsString() -> c
    org.json.JSONObject toJSON() -> d
    com.nibdev.otrtav2.model.jdata.Code parseJSON(org.json.JSONObject) -> a
    com.nibdev.otrtav2.model.jdata.Code fromHTCData(int,com.htc.htcircontrol.HtcIrData) -> a
com.nibdev.otrtav2.model.jdata.CodeAllocation -> com.nibdev.otrtav2.model.b.b:
    int mID -> a
    int mModelID -> b
    int mCodeID -> c
    int mCodeTypeID -> d
    int getID() -> a
    void setID(int) -> a
    int getModelID() -> b
    void setModelID(int) -> b
    int getCodeID() -> c
    void setCodeID(int) -> c
    int getCodeTypeID() -> d
    com.nibdev.otrtav2.model.jdata.CodeAllocation parseJSON(org.json.JSONObject) -> a
    org.json.JSONObject toJSON() -> e
com.nibdev.otrtav2.model.jdata.CodeType -> com.nibdev.otrtav2.model.b.c:
    java.lang.String mName -> a
    int mID -> b
    int getID() -> a
    java.lang.String getName() -> b
    com.nibdev.otrtav2.model.jdata.CodeType parseJSON(org.json.JSONObject) -> a
    java.lang.String toString() -> toString
com.nibdev.otrtav2.model.jdata.CodeTypeMapping -> com.nibdev.otrtav2.model.b.d:
    int mID -> a
    int mDeviceTypeID -> b
    int mCodeTypeID -> c
    int getID() -> a
    int getDeviceTypeID() -> b
    int getCodeTypeID() -> c
    com.nibdev.otrtav2.model.jdata.CodeTypeMapping parseJSON(org.json.JSONObject) -> a
com.nibdev.otrtav2.model.jdata.DeviceType -> com.nibdev.otrtav2.model.b.e:
    java.lang.String mName -> a
    int mID -> b
    int getID() -> a
    java.lang.String getName() -> b
    com.nibdev.otrtav2.model.jdata.DeviceType parseJSON(org.json.JSONObject) -> a
    java.lang.String toString() -> toString
com.nibdev.otrtav2.model.jdata.FSInfoRequest -> com.nibdev.otrtav2.model.b.f:
    int vendorMinID -> a
    int vendorMaxID -> b
    int vendorCount -> c
    int modelMinID -> d
    int modelMaxID -> e
    int modelCount -> f
    int codeTypeMinID -> g
    int codeTypeMaxID -> h
    int codeTypeCount -> i
    int deviceTypeMinID -> j
    int deviceTypeMaxID -> k
    int deviceTypeCount -> l
    int codeAllocationMinID -> m
    int codeAllocationMaxID -> n
    int codeAllocationCount -> o
    int codeMinID -> p
    int codeMaxID -> q
    int codeCount -> r
    int codeTypeMappingMinID -> s
    int codeTypeMappingMaxID -> t
    int codeTypeMappingCount -> u
    org.json.JSONObject toJSON() -> a
    void setVendorMinID(int) -> a
    void setVendorMaxID(int) -> b
    void setVendorCount(int) -> c
    void setModelMinID(int) -> d
    void setModelMaxID(int) -> e
    void setModelCount(int) -> f
    void setCodeTypeMinID(int) -> g
    void setCodeTypeMaxID(int) -> h
    void setCodeTypeCount(int) -> i
    void setDeviceTypeMinID(int) -> j
    void setDeviceTypeMaxID(int) -> k
    void setDeviceTypeCount(int) -> l
    void setCodeAllocationMinID(int) -> m
    void setCodeAllocationMaxID(int) -> n
    void setCodeAllocationCount(int) -> o
    void setCodeMinID(int) -> p
    void setCodeMaxID(int) -> q
    void setCodeCount(int) -> r
    void setCodeTypeMappingMinID(int) -> s
    void setCodeTypeMappingMaxID(int) -> t
    void setCodeTypeMappingCount(int) -> u
com.nibdev.otrtav2.model.jdata.FSInfoResponse -> com.nibdev.otrtav2.model.b.g:
    int[][] vendorDeleteGaps -> a
    int[][] modelDeleteGaps -> b
    int[][] deviceTypeDeleteGaps -> c
    int[][] codeTypeDeleteGaps -> d
    int[][] codeAllocationDeleteGaps -> e
    int[][] codeDeleteGaps -> f
    int[][] codeTypeMappingDeleteGaps -> g
    int[][] newVendors -> h
    int[][] newModels -> i
    int[][] newDeviceTypes -> j
    int[][] newCodeTypes -> k
    int[][] newCodeAllocations -> l
    int[][] newCodes -> m
    int[][] newCodeTypeMappings -> n
    int[][] getVendorDeleteGaps() -> a
    int[][] getModelDeleteGaps() -> b
    int[][] getDeviceTypeDeleteGaps() -> c
    int[][] getCodeTypeDeleteGaps() -> d
    int[][] getCodeAllocationDeleteGaps() -> e
    int[][] getCodeDeleteGaps() -> f
    int[][] getCodeTypeMappingDeleteGaps() -> g
    int[][] getNewVendors() -> h
    int[][] getNewModels() -> i
    int[][] getNewDeviceTypes() -> j
    int[][] getNewCodeTypes() -> k
    int[][] getNewCodeAllocations() -> l
    int[][] getNewCodes() -> m
    int[][] getNewCodeTypeMappings() -> n
    com.nibdev.otrtav2.model.jdata.FSInfoResponse parseJSON(org.json.JSONObject) -> a
com.nibdev.otrtav2.model.jdata.Model -> com.nibdev.otrtav2.model.b.h:
    int mVendorID -> a
    int mID -> b
    int mDeviceTypeID -> c
    java.lang.String mName -> d
    int getID() -> a
    void setID(int) -> a
    int getVendorID() -> b
    void setVendorID(int) -> b
    int getDeviceTypeID() -> c
    java.lang.String getName() -> d
    com.nibdev.otrtav2.model.jdata.Model parseJSON(org.json.JSONObject) -> a
    org.json.JSONObject toJSON() -> e
    java.lang.String toString() -> toString
com.nibdev.otrtav2.model.jdata.Vendor -> com.nibdev.otrtav2.model.b.i:
    java.lang.String mName -> a
    int mID -> b
    int getID() -> a
    void setID(int) -> a
    java.lang.String getName() -> b
    com.nibdev.otrtav2.model.jdata.Vendor parseJSON(org.json.JSONObject) -> a
    org.json.JSONObject toJSON() -> c
    java.lang.String toString() -> toString
com.nibdev.otrtav2.model.scripts.Script -> com.nibdev.otrtav2.model.scripts.a:
    int mId -> a
    java.lang.String mName -> b
    java.util.List mItems -> c
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.util.List getItems() -> c
com.nibdev.otrtav2.model.scripts.ScriptExecutor -> com.nibdev.otrtav2.model.scripts.b:
    boolean _cancel -> a
    java.util.HashSet _sentScriptIds -> b
    com.nibdev.otrtav2.model.scripts.ScriptExecutor$OnSendProgressChanged mListener -> c
    com.nibdev.otrtav2.model.scripts.Script mScript -> d
    com.nibdev.otrtav2.model.database.DBLocal mDb -> e
    com.nibdev.otrtav2.service.irinterfaces.IrFace mIrSender -> f
    java.lang.Thread mExecutorThread -> g
    void setOnProgressChangedListener(com.nibdev.otrtav2.model.scripts.ScriptExecutor$OnSendProgressChanged) -> a
    void execute() -> a
    void cancel() -> b
    void joinExecuteThread() -> c
    void resetSentIds() -> d
    java.util.HashSet access$0() -> e
    com.nibdev.otrtav2.model.scripts.Script access$1(com.nibdev.otrtav2.model.scripts.ScriptExecutor) -> a
    boolean access$2() -> f
    com.nibdev.otrtav2.model.scripts.ScriptExecutor$OnSendProgressChanged access$3(com.nibdev.otrtav2.model.scripts.ScriptExecutor) -> b
    com.nibdev.otrtav2.model.database.DBLocal access$4(com.nibdev.otrtav2.model.scripts.ScriptExecutor) -> c
    com.nibdev.otrtav2.service.irinterfaces.IrFace access$5(com.nibdev.otrtav2.model.scripts.ScriptExecutor) -> d
com.nibdev.otrtav2.model.scripts.ScriptExecutor$1 -> com.nibdev.otrtav2.model.scripts.c:
    com.nibdev.otrtav2.model.scripts.ScriptExecutor this$0 -> a
    void run() -> run
com.nibdev.otrtav2.model.scripts.ScriptExecutor$OnSendProgressChanged -> com.nibdev.otrtav2.model.scripts.d:
    void sendProgressChanged(int,int) -> a
    void executionFinished() -> a
com.nibdev.otrtav2.model.scripts.ScriptItem -> com.nibdev.otrtav2.model.scripts.ScriptItem:
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType mType -> a
    int mValue -> b
    int getValue() -> a
    void setValue(int) -> a
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType getType() -> b
    void setType(com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType) -> a
com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType -> com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType:
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType CODE -> CODE
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType SKRIPT -> SKRIPT
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType DELAY -> DELAY
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType[] ENUM$VALUES -> a
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType[] values() -> values
    com.nibdev.otrtav2.model.scripts.ScriptItem$ItemType valueOf(java.lang.String) -> valueOf
com.nibdev.otrtav2.model.tools.GsonData -> com.nibdev.otrtav2.model.c.a:
    com.google.gson.Gson gSON -> a
    com.google.gson.Gson _gInstance -> b
    com.google.gson.Gson getGson() -> a
    java.lang.String ObjectToGSON(java.lang.Object) -> a
    java.lang.Object GSONToObject(java.lang.Class,java.lang.String) -> a
com.nibdev.otrtav2.model.tools.LowerStringComparator -> com.nibdev.otrtav2.model.c.b:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nibdev.otrtav2.model.tools.MD5 -> com.nibdev.otrtav2.model.c.c:
    java.lang.String md5(java.lang.String) -> a
com.nibdev.otrtav2.model.tools.ServiceData -> com.nibdev.otrtav2.model.c.d:
    java.lang.String HttpGetAnswer(java.lang.String) -> a
    java.lang.String HttpPostAnswer(java.lang.String,org.json.JSONObject) -> a
    java.util.ArrayList HttpPostAnswer(java.lang.String,org.json.JSONArray) -> a
    org.json.JSONObject HttpPostAnswerJsonObject(java.lang.String,org.json.JSONObject) -> b
com.nibdev.otrtav2.model.tools.Zip -> com.nibdev.otrtav2.model.c.e:
    void unzipRaw(android.app.Activity,int,java.io.File,boolean) -> a
com.nibdev.otrtav2.service.IrDataCompat -> com.nibdev.otrtav2.service.IrDataCompat:
    int[] frame -> frame
    int frequency -> frequency
    int period -> period
    int periodTolerance -> periodTolerance
    int repeatCount -> repeatCount
    int FREQ_COMP -> FREQ_COMP
    int FRAME_COMP -> FRAME_COMP
    com.nibdev.otrtav2.service.IrDataCompat fromJson(java.lang.String) -> fromJson
    int getRepeatCount() -> getRepeatCount
    void setRepeatCount(int) -> setRepeatCount
    int getFrequency() -> getFrequency
    void setFrequency(int) -> setFrequency
    int[] getFrame() -> getFrame
    void setFrame(int[]) -> setFrame
    int getPeriod() -> getPeriod
    void setPeriod(int) -> setPeriod
    int getPeriodTolerance() -> getPeriodTolerance
    int sleepTime() -> sleepTime
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.nibdev.otrtav2.service.IrMessageHandler -> com.nibdev.otrtav2.service.a:
    com.nibdev.otrtav2.service.IrMessageHandler$OnStartedListener mStartedListener -> a
    com.nibdev.otrtav2.service.IrMessageHandler$OnCancelFinished mCancelFinishedListener -> b
    com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener mCodeLearnedListener -> c
    void setOnCodeLearnedListener(com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener) -> a
    void handleMessage(android.os.Message) -> handleMessage
com.nibdev.otrtav2.service.IrMessageHandler$OnCancelFinished -> com.nibdev.otrtav2.service.b:
    void onCanceled() -> a
com.nibdev.otrtav2.service.IrMessageHandler$OnStartedListener -> com.nibdev.otrtav2.service.c:
    void onStarted() -> a
com.nibdev.otrtav2.service.OTRTAService -> com.nibdev.otrtav2.service.OTRTAService:
    android.os.IBinder mBinder -> a
    com.nibdev.otrtav2.service.OTRTAService _instance -> b
    android.os.Handler mHandler -> c
    long mLastUsedTime -> d
    java.util.concurrent.atomic.AtomicInteger mBindCounter -> e
    com.nibdev.otrtav2.model.database.DBLocal mLocalDb -> f
    com.nibdev.otrtav2.model.database.DB2 mDb2 -> g
    com.nibdev.otrtav2.service.irinterfaces.IrFace mIrInterface -> h
    com.nibdev.otrtav2.model.scripts.ScriptExecutor mScriptExcetutor -> i
    android.app.NotificationManager mNotificationManager -> j
    android.support.v4.app.NotificationCompat$Builder mNotifyBuilder -> k
    com.nibdev.otrtav2.service.OTRTAService getInstance() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.nibdev.otrtav2.model.database.DBLocal getLocalDb() -> b
    com.nibdev.otrtav2.model.database.DB2 getDB2() -> c
    com.nibdev.otrtav2.service.irinterfaces.IrFace getIrSender() -> d
    void sendCode(int,boolean) -> a
    void sendButton(java.lang.String) -> a
    void cancelCode() -> e
    void sendScript(int) -> a
    void cancelScript() -> f
    java.util.concurrent.atomic.AtomicInteger access$0(com.nibdev.otrtav2.service.OTRTAService) -> a
    long access$1(com.nibdev.otrtav2.service.OTRTAService) -> b
    android.os.Handler access$2(com.nibdev.otrtav2.service.OTRTAService) -> c
    com.nibdev.otrtav2.service.irinterfaces.IrFace access$3(com.nibdev.otrtav2.service.OTRTAService) -> d
    void access$4(com.nibdev.otrtav2.service.OTRTAService,int,boolean) -> a
    void access$5(com.nibdev.otrtav2.service.OTRTAService,java.lang.String) -> a
    android.support.v4.app.NotificationCompat$Builder access$6(com.nibdev.otrtav2.service.OTRTAService) -> e
    android.app.NotificationManager access$7(com.nibdev.otrtav2.service.OTRTAService) -> f
    void access$8(com.nibdev.otrtav2.service.OTRTAService,int) -> a
com.nibdev.otrtav2.service.OTRTAService$1 -> com.nibdev.otrtav2.service.d:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    void run() -> run
com.nibdev.otrtav2.service.OTRTAService$2 -> com.nibdev.otrtav2.service.e:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    int val$copyAlloc -> b
    boolean val$copyRepeat -> c
    void run() -> run
com.nibdev.otrtav2.service.OTRTAService$3 -> com.nibdev.otrtav2.service.f:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    java.lang.String val$copyName -> b
    void run() -> run
com.nibdev.otrtav2.service.OTRTAService$4 -> com.nibdev.otrtav2.service.g:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    void sendProgressChanged(int,int) -> a
    void executionFinished() -> a
com.nibdev.otrtav2.service.OTRTAService$5 -> com.nibdev.otrtav2.service.h:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    int val$copyScript -> b
    void run() -> run
com.nibdev.otrtav2.service.OTRTAService$IRSendBinder -> com.nibdev.otrtav2.service.i:
    com.nibdev.otrtav2.service.OTRTAService this$0 -> a
    android.app.Service getService() -> a
com.nibdev.otrtav2.service.irinterfaces.HtcInfrared -> com.nibdev.otrtav2.service.a.a:
    com.nibdev.otrtav2.service.IrMessageHandler mHandler -> b
    com.htc.circontrol.CIRControl mCirControl -> c
    java.util.UUID mLongCodeUUID -> d
    java.lang.Thread mRepeatInitThread -> e
    boolean isRunning() -> a
    boolean canLearn() -> b
    void ifSendCode(com.nibdev.otrtav2.service.IrDataCompat,boolean) -> a
    void startRepeatingCode(com.htc.htcircontrol.HtcIrData) -> a
    void cancelCode() -> c
    void learnIRCmd(int) -> a
    void setOnCodeLearnedListener(com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener) -> a
    void onDestroy() -> d
    com.htc.circontrol.CIRControl access$0(com.nibdev.otrtav2.service.irinterfaces.HtcInfrared) -> a
    void access$1(com.nibdev.otrtav2.service.irinterfaces.HtcInfrared,java.util.UUID) -> a
com.nibdev.otrtav2.service.irinterfaces.HtcInfrared$1 -> com.nibdev.otrtav2.service.a.b:
    com.nibdev.otrtav2.service.irinterfaces.HtcInfrared this$0 -> a
    com.htc.htcircontrol.HtcIrData val$data -> b
    void run() -> run
com.nibdev.otrtav2.service.irinterfaces.IrFace -> com.nibdev.otrtav2.service.a.c:
    android.os.Vibrator mVibrator -> a
    void init() -> e
    void sendCode(com.nibdev.otrtav2.service.IrDataCompat,boolean) -> b
    void sendCodeAndSleep(com.nibdev.otrtav2.service.IrDataCompat,int) -> a
    void onDestroy() -> d
    boolean isRunning() -> a
    boolean canLearn() -> b
    void ifSendCode(com.nibdev.otrtav2.service.IrDataCompat,boolean) -> a
    void cancelCode() -> c
    void learnIRCmd(int) -> a
    void setOnCodeLearnedListener(com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener) -> a
    com.nibdev.otrtav2.service.irinterfaces.IrFace create(android.content.Context) -> a
com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener -> com.nibdev.otrtav2.service.a.d:
    void onCodeLearned(com.htc.htcircontrol.HtcIrData,java.lang.String) -> a
com.nibdev.otrtav2.service.irinterfaces.SamsungInfrared -> com.nibdev.otrtav2.service.a.e:
    java.lang.Object mIrdaService -> b
    java.lang.reflect.Method mWriteMethod -> c
    boolean isRunning() -> a
    boolean canLearn() -> b
    void ifSendCode(com.nibdev.otrtav2.service.IrDataCompat,boolean) -> a
    void cancelCode() -> c
    void learnIRCmd(int) -> a
    void setOnCodeLearnedListener(com.nibdev.otrtav2.service.irinterfaces.IrFace$OnCodeLearnedListener) -> a
    void onDestroy() -> d
    java.lang.String fromCompat(com.nibdev.otrtav2.service.IrDataCompat) -> a
com.nibdev.otrtav2.view.adapters.AutoCompleteArrayAdapter -> com.nibdev.otrtav2.view.a.a:
    java.util.List mOriginalValues -> a
    java.util.List mObjects -> b
    android.widget.Filter mFilter -> c
    int getCount() -> getCount
    java.lang.String getItem(int) -> a
    android.widget.Filter getFilter() -> getFilter
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(com.nibdev.otrtav2.view.adapters.AutoCompleteArrayAdapter) -> a
    void access$2(com.nibdev.otrtav2.view.adapters.AutoCompleteArrayAdapter,java.util.List) -> a
com.nibdev.otrtav2.view.adapters.AutoCompleteArrayAdapter$CustomFilter -> com.nibdev.otrtav2.view.a.b:
    com.nibdev.otrtav2.view.adapters.AutoCompleteArrayAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.nibdev.otrtav2.view.adapters.CodeListAdapter -> com.nibdev.otrtav2.view.a.c:
    java.util.List mSortedCodes -> a
    android.app.ProgressDialog mCheckDeleteDialog -> b
    android.view.View$OnClickListener mOnTrashClickListener -> c
    android.view.View$OnTouchListener mOnSendTouchListener -> d
    android.view.View$OnTouchListener mOnRecolorTouchListener -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.nibdev.otrtav2.view.adapters.CodeListAdapter,android.app.ProgressDialog) -> a
    android.app.ProgressDialog access$1(com.nibdev.otrtav2.view.adapters.CodeListAdapter) -> a
    android.view.View$OnTouchListener access$2(com.nibdev.otrtav2.view.adapters.CodeListAdapter) -> b
com.nibdev.otrtav2.view.adapters.CodeListAdapter$1 -> com.nibdev.otrtav2.view.a.d:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.adapters.CodeListAdapter$2 -> com.nibdev.otrtav2.view.a.e:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.nibdev.otrtav2.view.adapters.CodeListAdapter$3 -> com.nibdev.otrtav2.view.a.f:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask -> com.nibdev.otrtav2.view.a.g:
    int deleteId -> b
    android.content.DialogInterface$OnClickListener mOnDeleteClickListener -> c
    com.nibdev.otrtav2.view.adapters.CodeListAdapter this$0 -> a
    java.lang.String doInBackground(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    int access$3(com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask) -> a
    com.nibdev.otrtav2.view.adapters.CodeListAdapter access$4(com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask) -> b
com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1 -> com.nibdev.otrtav2.view.a.h:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask access$0(com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1) -> a
com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1$1 -> com.nibdev.otrtav2.view.a.i:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1 this$2 -> a
    void run() -> run
    com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1 access$0(com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1$1) -> a
com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1$1$1 -> com.nibdev.otrtav2.view.a.j:
    com.nibdev.otrtav2.view.adapters.CodeListAdapter$CheckPermissionTask$1$1 this$3 -> a
    void run() -> run
com.nibdev.otrtav2.view.adapters.CodeSelectSpinnerAdapter -> com.nibdev.otrtav2.view.a.k:
    java.lang.String mTopString -> a
    java.util.List mSortedCodes -> b
    void setTopString(java.lang.String) -> a
    int addTs() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.DrawerAdapter -> com.nibdev.otrtav2.view.a.l:
    java.util.List mData -> a
    int mSelectedPos -> b
    void disableLearn() -> a
    void setSelectedPosition(int) -> a
    int getSelectedPosition() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ListAdapterDB2CodeSets -> com.nibdev.otrtav2.view.a.m:
    java.util.List mCodeSets -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes -> com.nibdev.otrtav2.view.a.n:
    java.util.List mCodes -> a
    android.view.View$OnTouchListener mOnSendTouchListener -> b
    android.view.View$OnTouchListener mOnRecolorTouchListener -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View$OnTouchListener access$0(com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes) -> a
    java.util.List access$1(com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes) -> b
com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes$1 -> com.nibdev.otrtav2.view.a.o:
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes$2 -> com.nibdev.otrtav2.view.a.p:
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.nibdev.otrtav2.view.adapters.ListAdapterDB2DeviceTypes -> com.nibdev.otrtav2.view.a.q:
    android.util.SparseArray mDtNames -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ListAdapterDB2Vendors -> com.nibdev.otrtav2.view.a.r:
    java.util.List mVendors -> a
    java.util.List mSectionsList -> b
    java.util.List mSectionsStart -> c
    java.lang.String[] mSections -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
com.nibdev.otrtav2.view.adapters.ModelListAdapter -> com.nibdev.otrtav2.view.a.s:
    int mVendorId -> a
    java.util.List mDeviceTypeIds -> b
    java.util.List mDeviceTypeNames -> c
    java.util.HashMap mModelsDeviceTypped -> d
    java.util.List mInnerAdapters -> e
    com.nibdev.otrtav2.view.adapters.ModelListAdapter$OnModelClickListener mListener -> f
    android.widget.AdapterView$OnItemClickListener mOnInnerClickListener -> g
    java.lang.Object getChild(int,int) -> getChild
    long getChildId(int,int) -> getChildId
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    void setOnModelClickListener(com.nibdev.otrtav2.view.adapters.ModelListAdapter$OnModelClickListener) -> a
    com.nibdev.otrtav2.view.adapters.ModelListAdapter$OnModelClickListener access$0(com.nibdev.otrtav2.view.adapters.ModelListAdapter) -> a
com.nibdev.otrtav2.view.adapters.ModelListAdapter$1 -> com.nibdev.otrtav2.view.a.t:
    com.nibdev.otrtav2.view.adapters.ModelListAdapter this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.adapters.ModelListAdapter$InnerAdapter -> com.nibdev.otrtav2.view.a.u:
    java.util.List mModels -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.nibdev.otrtav2.view.adapters.ModelListAdapter$InnerAdapter) -> a
com.nibdev.otrtav2.view.adapters.ModelListAdapter$OnModelClickListener -> com.nibdev.otrtav2.view.a.v:
    void onModelClick(long,java.lang.String) -> a
com.nibdev.otrtav2.view.adapters.ModelSelectSpinnerAdapter -> com.nibdev.otrtav2.view.a.w:
    java.lang.String mTopString -> a
    java.util.List mModelData -> b
    void setTopString(java.lang.String) -> a
    int addTs() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ScriptGridAdapter -> com.nibdev.otrtav2.view.a.x:
    java.util.TreeMap mScripts -> a
    java.util.List mScriptList -> b
    void reloadScripts() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ScriptItemListAdapter -> com.nibdev.otrtav2.view.a.y:
    java.util.List mItems -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.ScriptSelectSpinnerAdapter -> com.nibdev.otrtav2.view.a.z:
    java.lang.String mTopString -> a
    java.util.List mScripts -> b
    void setTopString(java.lang.String) -> a
    int addTs() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.adapters.SearchGridAdapter -> com.nibdev.otrtav2.view.a.aa:
    java.util.TreeMap mAllEntries -> a
    java.util.List mMatchedEntries -> b
    com.nibdev.otrtav2.view.adapters.SearchGridAdapter$SearchTask mSearchTask -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void stopSearchTask() -> a
    void setTextChanged(java.lang.String) -> a
    java.util.List access$0(com.nibdev.otrtav2.view.adapters.SearchGridAdapter) -> a
    java.util.TreeMap access$1(com.nibdev.otrtav2.view.adapters.SearchGridAdapter) -> b
com.nibdev.otrtav2.view.adapters.SearchGridAdapter$SearchTask -> com.nibdev.otrtav2.view.a.ab:
    com.nibdev.otrtav2.view.adapters.SearchGridAdapter this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.List doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.List) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nibdev.otrtav2.view.adapters.SearchGridAdapter$TypedSearchEntry -> com.nibdev.otrtav2.view.a.ac:
    android.text.SpannableString ModelName -> a
    android.text.SpannableString VendorName -> b
    java.lang.String DeviceTypeName -> c
    long ID -> d
    java.lang.String getName() -> a
    int getID() -> b
com.nibdev.otrtav2.view.adapters.VendorGridAdapter -> com.nibdev.otrtav2.view.a.ad:
    java.util.List mVendorData -> a
    java.util.HashSet mAnimatedPositions -> b
    java.lang.String[] mSections -> c
    java.util.List mSectionsStart -> d
    java.util.List mSectionsList -> e
    void onNewData() -> a
    void createSectionData() -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
com.nibdev.otrtav2.view.adapters.VendorSelectSpinnerAdapter -> com.nibdev.otrtav2.view.a.ae:
    java.lang.String mTopString -> a
    java.util.List mVendorData -> b
    void setTopString(java.lang.String) -> a
    int addTs() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.custom.HoloProgress -> com.nibdev.otrtav2.view.custom.HoloProgress:
    boolean mIsInitializing -> a
    android.graphics.Paint mBackgroundColorPaint -> b
    int mCircleStrokeWidth -> c
    int mThumbRadius -> d
    android.graphics.RectF mCircleBounds -> e
    float mRadius -> f
    int mProgressColor -> g
    android.graphics.Paint mProgressColorPaint -> h
    int mProgressBackgroundColor -> i
    float mProgress -> j
    android.graphics.Paint mThumbColorPaint -> k
    float mMarkerProgress -> l
    android.graphics.Paint mMarkerColorPaint -> m
    boolean mIsMarkerEnabled -> n
    int mGravity -> o
    int mHorizontalInset -> p
    int mVerticalInset -> q
    float mTranslationOffsetX -> r
    float mTranslationOffsetY -> s
    float mThumbPosX -> t
    float mThumbPosY -> u
    boolean mOverrdraw -> v
    android.graphics.RectF tmpRect -> w
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void computeInsets(int,int) -> a
    float getCurrentRotation() -> getCurrentRotation
    float getMarkerRotation() -> getMarkerRotation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressColor(int) -> setProgressColor
    void changeProgressColor(int) -> a
    void setWheelSize(int) -> setWheelSize
    float getMarkerProgress() -> getMarkerProgress
    float getProgress() -> getProgress
    int getProgressColor() -> getProgressColor
    void setMarkerEnabled(boolean) -> setMarkerEnabled
    void setMarkerProgress(float) -> setMarkerProgress
    void setProgress(float) -> setProgress
com.nibdev.otrtav2.view.custom.NonScrollableGridView -> com.nibdev.otrtav2.view.custom.a:
    void onMeasure(int,int) -> onMeasure
com.nibdev.otrtav2.view.custom.ProgressMessageBar -> com.nibdev.otrtav2.view.custom.b:
    android.view.View mContainer -> a
    android.widget.TextView mTextView -> b
    android.widget.ProgressBar mPb -> c
    android.widget.ImageView mButton -> d
    void init(android.view.View) -> a
    void show() -> b
    void hide(int) -> a
    void onStop() -> a
    void onSyncStatusUpdate(com.nibdev.otrtav2.model.database.DBRemote$SyncStatusCallbacks$RemoteSyncState,int,int,java.lang.String) -> a
    android.view.View access$0(com.nibdev.otrtav2.view.custom.ProgressMessageBar) -> a
com.nibdev.otrtav2.view.custom.ProgressMessageBar$1 -> com.nibdev.otrtav2.view.custom.c:
    com.nibdev.otrtav2.view.custom.ProgressMessageBar this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.custom.ProgressMessageBar$2 -> com.nibdev.otrtav2.view.custom.d:
    com.nibdev.otrtav2.view.custom.ProgressMessageBar this$0 -> a
    void run() -> run
com.nibdev.otrtav2.view.custom.SendGlow -> com.nibdev.otrtav2.view.custom.e:
    android.content.Context mContext -> a
    android.widget.LinearLayout mContainer -> b
    android.view.View mGlowView -> c
    android.view.WindowManager mWm -> d
    android.view.WindowManager$LayoutParams mLp -> e
    android.animation.AnimatorSet mAnimSet -> f
    java.lang.Runnable mAnimRunnable -> g
    void init(android.content.Context) -> a
    void sGlowOnce() -> a
    android.animation.AnimatorSet access$0() -> b
    android.view.WindowManager access$1() -> c
    android.widget.LinearLayout access$2() -> d
    android.view.WindowManager$LayoutParams access$3() -> e
com.nibdev.otrtav2.view.custom.SendGlow$1 -> com.nibdev.otrtav2.view.custom.f:
    void run() -> run
com.nibdev.otrtav2.view.custom.SendGlow$2 -> com.nibdev.otrtav2.view.custom.g:
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.nibdev.otrtav2.view.custom.StringInputDialog -> com.nibdev.otrtav2.view.custom.h:
    android.widget.EditText mInputField -> a
    android.content.Context mContext -> b
    com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged mListener -> c
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> d
    android.content.DialogInterface$OnClickListener mOnClickListener -> e
    android.content.DialogInterface$OnShowListener mOnShowListener -> f
    android.app.AlertDialog getStringInputDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged) -> a
    android.content.Context access$0(com.nibdev.otrtav2.view.custom.StringInputDialog) -> a
    android.widget.EditText access$1(com.nibdev.otrtav2.view.custom.StringInputDialog) -> b
    com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged access$2(com.nibdev.otrtav2.view.custom.StringInputDialog) -> c
com.nibdev.otrtav2.view.custom.StringInputDialog$1 -> com.nibdev.otrtav2.view.custom.i:
    com.nibdev.otrtav2.view.custom.StringInputDialog this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.nibdev.otrtav2.view.custom.StringInputDialog$2 -> com.nibdev.otrtav2.view.custom.j:
    com.nibdev.otrtav2.view.custom.StringInputDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.view.custom.StringInputDialog$3 -> com.nibdev.otrtav2.view.custom.k:
    com.nibdev.otrtav2.view.custom.StringInputDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged -> com.nibdev.otrtav2.view.custom.l:
    void textChanged(java.lang.String) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortController -> com.nibdev.otrtav2.view.custom.dslv.a:
    int mDragInitMode -> a
    boolean mSortEnabled -> b
    int mRemoveMode -> c
    boolean mRemoveEnabled -> d
    boolean mIsRemoving -> e
    android.view.GestureDetector mDetector -> f
    android.view.GestureDetector mFlingRemoveDetector -> g
    int mTouchSlop -> h
    int mHitPos -> i
    int mFlingHitPos -> j
    int mClickRemoveHitPos -> k
    int[] mTempLoc -> l
    int mItemX -> m
    int mItemY -> n
    int mCurrX -> o
    int mCurrY -> p
    boolean mDragging -> q
    float mFlingSpeed -> r
    int mDragHandleId -> s
    int mClickRemoveId -> t
    int mFlingHandleId -> u
    boolean mCanDrag -> v
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView mDslv -> w
    int mPositionX -> x
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> y
    void setDragInitMode(int) -> a
    void setSortEnabled(boolean) -> a
    void setRemoveMode(int) -> b
    void setRemoveEnabled(boolean) -> b
    boolean startDrag(int,int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    int startDragPosition(android.view.MotionEvent) -> a
    int startFlingPosition(android.view.MotionEvent) -> b
    int dragHandleHitPosition(android.view.MotionEvent) -> c
    int flingHandleHitPosition(android.view.MotionEvent) -> d
    int viewIdHitPosition(android.view.MotionEvent,int) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean access$0(com.nibdev.otrtav2.view.custom.dslv.DragSortController) -> a
    boolean access$1(com.nibdev.otrtav2.view.custom.dslv.DragSortController) -> b
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView access$2(com.nibdev.otrtav2.view.custom.dslv.DragSortController) -> c
    float access$3(com.nibdev.otrtav2.view.custom.dslv.DragSortController) -> d
    int access$4(com.nibdev.otrtav2.view.custom.dslv.DragSortController) -> e
    void access$5(com.nibdev.otrtav2.view.custom.dslv.DragSortController,boolean) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortController$1 -> com.nibdev.otrtav2.view.custom.dslv.b:
    com.nibdev.otrtav2.view.custom.dslv.DragSortController this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.nibdev.otrtav2.view.custom.dslv.DragSortItemView -> com.nibdev.otrtav2.view.custom.dslv.c:
    int mGravity -> a
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.nibdev.otrtav2.view.custom.dslv.DragSortItemViewCheckable -> com.nibdev.otrtav2.view.custom.dslv.d:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.nibdev.otrtav2.view.custom.dslv.DragSortListView -> com.nibdev.otrtav2.view.custom.dslv.DragSortListView:
    android.view.View mFloatView -> a
    android.graphics.Point mFloatLoc -> b
    android.graphics.Point mTouchLoc -> c
    int mFloatViewMid -> d
    boolean mFloatViewOnMeasured -> e
    android.database.DataSetObserver mObserver -> f
    float mFloatAlpha -> g
    float mCurrFloatAlpha -> h
    int mFloatPos -> i
    int mFirstExpPos -> j
    int mSecondExpPos -> k
    boolean mAnimate -> l
    int mSrcPos -> m
    int mDragDeltaX -> n
    int mDragDeltaY -> o
    int mOffsetX -> p
    int mOffsetY -> q
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragListener mDragListener -> r
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropListener mDropListener -> s
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveListener mRemoveListener -> t
    boolean mDragEnabled -> u
    int mDragState -> v
    int mItemHeightCollapsed -> w
    int mFloatViewHeight -> x
    int mFloatViewHeightHalf -> y
    int mWidthMeasureSpec -> z
    android.view.View[] mSampleViewTypes -> A
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScroller mDragScroller -> B
    float mDragUpScrollStartFrac -> C
    float mDragDownScrollStartFrac -> D
    int mUpScrollStartY -> E
    int mDownScrollStartY -> F
    float mDownScrollStartYF -> G
    float mUpScrollStartYF -> H
    float mDragUpScrollHeight -> I
    float mDragDownScrollHeight -> J
    float mMaxScrollSpeed -> K
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScrollProfile mScrollProfile -> L
    int mX -> M
    int mY -> N
    int mLastX -> O
    int mLastY -> P
    int mDragStartY -> Q
    int mDragFlags -> R
    boolean mLastCallWasIntercept -> S
    boolean mInTouchEvent -> T
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$FloatViewManager mFloatViewManager -> U
    android.view.MotionEvent mCancelEvent -> V
    int mCancelMethod -> W
    float mSlideRegionFrac -> Z
    float mSlideFrac -> aa
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> ab
    boolean mTrackDragSort -> ac
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragSortTracker mDragSortTracker -> ad
    boolean mBlockLayoutRequests -> ae
    boolean mIgnoreTouchEvent -> af
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$HeightCache mChildHeightCache -> ag
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> ah
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$LiftAnimator mLiftAnimator -> ai
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropAnimator mDropAnimator -> aj
    boolean mUseRemoveVelocity -> ak
    float mRemoveVelocityX -> al
    boolean mListViewIntercepted -> am
    boolean mFloatViewInvalidated -> an
    void setFloatAlpha(float) -> setFloatAlpha
    float getFloatAlpha() -> getFloatAlpha
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    void drawDivider(int,android.graphics.Canvas) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getItemHeight(int) -> b
    int getShuffleEdge(int,int) -> a
    boolean updatePositions() -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void removeItem(int) -> a
    void removeItem(int,float) -> a
    void cancelDrag() -> a
    void clearPositions() -> e
    void dropFloatView() -> f
    void doRemoveItem() -> g
    void doRemoveItem(int) -> c
    void adjustOnReorder() -> h
    boolean stopDrag(boolean) -> a
    boolean stopDragWithVelocity(boolean,float) -> a
    boolean stopDrag(boolean,float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doActionUpOrCancel() -> i
    void saveTouchCoords(android.view.MotionEvent) -> b
    boolean listViewIntercepted() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> a
    void continueDrag(int,int) -> b
    void updateScrollStarts() -> j
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void adjustAllItems() -> k
    void adjustItem(int,android.view.View,boolean) -> a
    int getChildHeight(int) -> d
    int getChildHeight(int,android.view.View,boolean) -> b
    int calcItemHeight(int,android.view.View,boolean) -> c
    int calcItemHeight(int,int) -> c
    void requestLayout() -> requestLayout
    int adjustScroll(int,android.view.View,int,int) -> a
    void measureItem(android.view.View) -> a
    void measureFloatView() -> l
    void onMeasure(int,int) -> onMeasure
    void layoutChildren() -> layoutChildren
    boolean onDragTouchEvent(android.view.MotionEvent) -> a
    boolean startDrag(int,int,int,int) -> a
    boolean startDrag(int,android.view.View,int,int,int) -> a
    void doDragFloatView(boolean) -> b
    void doDragFloatView(int,android.view.View,boolean) -> d
    void updateFloatView() -> m
    void destroyFloatView() -> n
    void setFloatViewManager(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setDragListener(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> c
    void setDropListener(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropListener) -> setDropListener
    void setRemoveListener(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    void setDragSortListener(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDragScrollProfile(com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    float access$0(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> a
    void access$1(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int,android.view.View,boolean) -> a
    int access$2(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> b
    int access$3(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> c
    int access$4(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> d
    void access$5(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int) -> a
    android.graphics.Point access$6(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> e
    int access$7(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> f
    void access$8(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,boolean) -> a
    int access$9(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> g
    int access$10(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> h
    void access$11(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int) -> b
    int access$12(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> i
    int access$13(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> j
    void access$14(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> k
    int access$15(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> l
    int access$16(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> m
    boolean access$17(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> n
    float access$18(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> o
    void access$19(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,float) -> a
    void access$20(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> p
    int access$21(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int,android.view.View,boolean) -> b
    void access$22(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> q
    int access$23(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> r
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScrollProfile access$24(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> s
    float access$25(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> t
    float access$26(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> u
    float access$27(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> v
    float access$28(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> w
    void access$29(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,boolean) -> b
    void access$30(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int,android.view.View,boolean) -> c
    int access$31(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int) -> c
    int access$32(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int) -> d
    int access$33(com.nibdev.otrtav2.view.custom.dslv.DragSortListView) -> x
    int access$34(com.nibdev.otrtav2.view.custom.dslv.DragSortListView,int,int) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$1 -> com.nibdev.otrtav2.view.custom.dslv.e:
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    float getSpeed(float,long) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$2 -> com.nibdev.otrtav2.view.custom.dslv.f:
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    void cancel() -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$AdapterWrapper -> com.nibdev.otrtav2.view.custom.dslv.g:
    android.widget.ListAdapter mAdapter -> b
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    android.widget.ListAdapter getAdapter() -> a
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$AdapterWrapper$1 -> com.nibdev.otrtav2.view.custom.dslv.h:
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$AdapterWrapper this$1 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragListener -> com.nibdev.otrtav2.view.custom.dslv.i:
    void drag(int,int) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScrollProfile -> com.nibdev.otrtav2.view.custom.dslv.j:
    float getSpeed(float,long) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragScroller -> com.nibdev.otrtav2.view.custom.dslv.k:
    boolean mAbort -> b
    long mPrevTime -> c
    long mCurrTime -> d
    int dy -> e
    float dt -> f
    long tStart -> g
    int scrollDir -> h
    float mScrollSpeed -> i
    boolean mScrolling -> j
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    boolean isScrolling() -> a
    int getScrollDir() -> b
    void startScrolling(int) -> a
    void stopScrolling(boolean) -> a
    void run() -> run
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragSortListener -> com.nibdev.otrtav2.view.custom.dslv.l:
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DragSortTracker -> com.nibdev.otrtav2.view.custom.dslv.m:
    java.lang.StringBuilder mBuilder -> a
    java.io.File mFile -> b
    int mNumInBuffer -> d
    int mNumFlushes -> e
    boolean mTracking -> f
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> c
    void startTracking() -> a
    void appendState() -> b
    void flush() -> c
    void stopTracking() -> d
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropAnimator -> com.nibdev.otrtav2.view.custom.dslv.n:
    int mDropPos -> d
    int srcPos -> e
    float mInitDeltaY -> f
    float mInitDeltaX -> g
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    int getTargetY() -> e
    void onUpdate(float,float) -> a
    void onStop() -> b
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropListener -> com.nibdev.otrtav2.view.custom.dslv.o:
    void drop(int,int) -> a_
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$FloatViewManager -> com.nibdev.otrtav2.view.custom.dslv.p:
    android.view.View onCreateFloatView(int) -> c
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$HeightCache -> com.nibdev.otrtav2.view.custom.dslv.q:
    android.util.SparseIntArray mMap -> b
    java.util.ArrayList mOrder -> c
    int mMaxSize -> d
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    void add(int,int) -> a
    int get(int) -> a
    void clear() -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$LiftAnimator -> com.nibdev.otrtav2.view.custom.dslv.r:
    float mInitDragDeltaY -> d
    float mFinalDragDeltaY -> e
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveAnimator -> com.nibdev.otrtav2.view.custom.dslv.s:
    float mFloatLocX -> d
    float mFirstStartBlank -> e
    float mSecondStartBlank -> f
    int mFirstChildHeight -> g
    int mSecondChildHeight -> h
    int mFirstPos -> i
    int mSecondPos -> j
    int srcPos -> k
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveListener -> com.nibdev.otrtav2.view.custom.dslv.t:
    void remove(int) -> a
com.nibdev.otrtav2.view.custom.dslv.DragSortListView$SmoothAnimator -> com.nibdev.otrtav2.view.custom.dslv.u:
    long mStartTime -> b
    float mDurationF -> a
    float mAlpha -> d
    float mA -> e
    float mB -> f
    float mC -> g
    float mD -> h
    boolean mCanceled -> i
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView this$0 -> c
    float transform(float) -> a
    void start() -> c
    void cancel() -> d
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
    void run() -> run
com.nibdev.otrtav2.view.custom.dslv.SimpleFloatViewManager -> com.nibdev.otrtav2.view.custom.dslv.v:
    android.graphics.Bitmap mFloatBitmap -> a
    android.widget.ImageView mImageView -> b
    int mFloatBGColor -> c
    android.widget.ListView mListView -> d
    void setBackgroundColor(int) -> d
    android.view.View onCreateFloatView(int) -> c
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.nibdev.otrtav2.view.fragments.FragmentCodeList -> com.nibdev.otrtav2.view.b.a:
    android.widget.ListView mLvCodes -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.nibdev.otrtav2.view.fragments.FragmentDB2CodeList -> com.nibdev.otrtav2.view.b.b:
    android.widget.ListView mLvCodes -> a
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2Codes mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.nibdev.otrtav2.view.fragments.FragmentDB2CodeSetList -> com.nibdev.otrtav2.view.b.c:
    android.widget.ListView mLvCodesets -> a
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2CodeSets mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.nibdev.otrtav2.view.fragments.FragmentDB2CodeSetList$1 -> com.nibdev.otrtav2.view.b.d:
    com.nibdev.otrtav2.view.fragments.FragmentDB2CodeSetList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentDB2DeviceTypeList -> com.nibdev.otrtav2.view.b.e:
    android.widget.ListView mLvDeviceTypes -> a
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2DeviceTypes mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.nibdev.otrtav2.view.fragments.FragmentDB2DeviceTypeList$1 -> com.nibdev.otrtav2.view.b.f:
    com.nibdev.otrtav2.view.fragments.FragmentDB2DeviceTypeList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentDB2VendorList -> com.nibdev.otrtav2.view.b.g:
    android.widget.ListView mLvVendors -> a
    com.nibdev.otrtav2.view.adapters.ListAdapterDB2Vendors mAdapter -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
com.nibdev.otrtav2.view.fragments.FragmentDB2VendorList$1 -> com.nibdev.otrtav2.view.b.h:
    com.nibdev.otrtav2.view.fragments.FragmentDB2VendorList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentLearn -> com.nibdev.otrtav2.view.b.i:
    com.htc.htcircontrol.HtcIrData mLearnedCode -> a
    com.nibdev.otrtav2.view.fragments.FragmentLearn$LearnCountdownTask mCountdownTask -> b
    com.nibdev.otrtav2.view.fragments.FragmentLearn$UploadDataTask mUploadTask -> c
    android.widget.LinearLayout mLlUpload -> d
    android.widget.CheckBox mCbAutolearn -> e
    com.nibdev.otrtav2.view.custom.HoloProgress mHoloProgress -> f
    android.widget.TextView mTvStatus -> g
    android.widget.Button mBtTest -> h
    android.widget.Button mBtLearn -> i
    android.widget.Button mBtUpload -> Y
    android.widget.AutoCompleteTextView mActvVendor -> Z
    android.widget.AutoCompleteTextView mActvModel -> aa
    android.widget.Spinner mSpnDeviceType -> ab
    android.widget.Spinner mSpnCodeType -> ac
    android.widget.PopupWindow mPopup -> ad
    android.graphics.drawable.Drawable mErrorDrawable -> ae
    android.app.ProgressDialog mUploadProgressDialog -> af
    java.util.TreeMap mVendorNames -> ag
    java.util.TreeMap mDeviceTypeNames -> ah
    java.util.TreeMap mCodeTypeNames -> ai
    java.util.TreeMap mModelNames -> aj
    android.view.View$OnClickListener mOnButtonListener -> ak
    android.text.TextWatcher mOnNonEmptyTextWachter -> al
    android.widget.AdapterView$OnItemClickListener mOnVendorClickListener -> am
    android.widget.AdapterView$OnItemClickListener mOnModelClickListener -> an
    android.widget.AdapterView$OnItemSelectedListener mOnDeviceTypeClickListener -> ao
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
    void initViews() -> a
    void startLearning() -> b
    void checkStartUpload() -> c
    com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData createDataFromInputfields() -> F
    void onCodeLearned(com.htc.htcircontrol.HtcIrData,java.lang.String) -> a
    void switchToUploadView() -> G
    void hideKeyboard(android.view.View) -> b
    void showEmptyStringError(android.widget.TextView,java.lang.String) -> a
    void loadDataFromLastSession() -> H
    void saveDataForNextSession(com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData) -> a
    void access$0(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> a
    com.htc.htcircontrol.HtcIrData access$1(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> b
    void access$2(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> c
    android.widget.PopupWindow access$3(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> d
    android.widget.AutoCompleteTextView access$4(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> e
    android.widget.AutoCompleteTextView access$5(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> f
    void access$6(com.nibdev.otrtav2.view.fragments.FragmentLearn,android.view.View) -> a
    java.util.TreeMap access$7(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> g
    java.util.TreeMap access$8(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> h
    android.widget.Spinner access$9(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> i
    java.util.TreeMap access$10(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> j
    android.widget.Spinner access$11(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> k
    java.util.TreeMap access$12(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> l
    void access$13(com.nibdev.otrtav2.view.fragments.FragmentLearn,java.util.TreeMap) -> a
    void access$14(com.nibdev.otrtav2.view.fragments.FragmentLearn,java.util.TreeMap) -> b
    void access$15(com.nibdev.otrtav2.view.fragments.FragmentLearn,java.util.TreeMap) -> c
    void access$16(com.nibdev.otrtav2.view.fragments.FragmentLearn,java.util.TreeMap) -> d
    void access$17(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> m
    com.nibdev.otrtav2.view.custom.HoloProgress access$18(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> n
    void access$19(com.nibdev.otrtav2.view.fragments.FragmentLearn,android.app.ProgressDialog) -> a
    android.app.ProgressDialog access$20(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> o
    android.widget.LinearLayout access$21(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> p
    android.widget.TextView access$22(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> q
    android.widget.Button access$23(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> r
    android.widget.Button access$24(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> s
    android.widget.Button access$25(com.nibdev.otrtav2.view.fragments.FragmentLearn) -> t
com.nibdev.otrtav2.view.fragments.FragmentLearn$1 -> com.nibdev.otrtav2.view.b.j:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentLearn$2 -> com.nibdev.otrtav2.view.b.k:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.nibdev.otrtav2.view.fragments.FragmentLearn$3 -> com.nibdev.otrtav2.view.b.l:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentLearn$4 -> com.nibdev.otrtav2.view.b.m:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentLearn$5 -> com.nibdev.otrtav2.view.b.n:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.nibdev.otrtav2.view.fragments.FragmentLearn$LearnCountdownTask -> com.nibdev.otrtav2.view.b.o:
    int timeOut -> b
    long started -> c
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.Float[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.nibdev.otrtav2.view.fragments.FragmentLearn$LoadDatabaseTask -> com.nibdev.otrtav2.view.b.p:
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData -> com.nibdev.otrtav2.view.b.q:
    com.nibdev.otrtav2.model.jdata.Vendor vend -> a
    com.nibdev.otrtav2.model.jdata.Model mod -> b
    com.nibdev.otrtav2.model.jdata.Code codedata -> c
    com.nibdev.otrtav2.model.jdata.CodeAllocation ca -> d
    int ctId -> e
    int dtId -> f
com.nibdev.otrtav2.view.fragments.FragmentLearn$UploadDataTask -> com.nibdev.otrtav2.view.b.r:
    com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData uploadedData -> b
    com.nibdev.otrtav2.view.fragments.FragmentLearn this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(com.nibdev.otrtav2.view.fragments.FragmentLearn$SaveUploadData[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nibdev.otrtav2.view.fragments.FragmentModelList -> com.nibdev.otrtav2.view.b.s:
    android.widget.ExpandableListView mELVModels -> a
    com.nibdev.otrtav2.view.adapters.ModelListAdapter$OnModelClickListener mOnModelClickListner -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.widget.ExpandableListView access$0(com.nibdev.otrtav2.view.fragments.FragmentModelList) -> a
com.nibdev.otrtav2.view.fragments.FragmentModelList$1 -> com.nibdev.otrtav2.view.b.t:
    com.nibdev.otrtav2.view.fragments.FragmentModelList this$0 -> a
    void onModelClick(long,java.lang.String) -> a
com.nibdev.otrtav2.view.fragments.FragmentModelList$2 -> com.nibdev.otrtav2.view.b.u:
    com.nibdev.otrtav2.view.fragments.FragmentModelList this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor -> com.nibdev.otrtav2.view.b.v:
    com.nibdev.otrtav2.model.scripts.Script mScript -> a
    android.widget.TextView mTvName -> b
    android.widget.ImageButton mIbCode -> c
    android.widget.ImageButton mIbScript -> d
    android.widget.ImageButton mIbDelay -> e
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView mLvItems -> f
    android.app.ProgressDialog mTestProgressDialog -> g
    com.nibdev.otrtav2.view.adapters.ScriptItemListAdapter mAdapter -> h
    com.nibdev.otrtav2.model.scripts.ScriptItem mEditItem -> i
    com.nibdev.otrtav2.model.scripts.ScriptExecutor mWorkingScriptExecutor -> Y
    android.widget.AdapterView$OnItemClickListener mOnExistingItemClickListener -> Z
    android.view.View$OnClickListener mOnNewItemClickListener -> aa
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener mOnCodeChangedListener -> ab
    com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged mOnDelayChangedListener -> ac
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener mOnScriptChangedListener -> ad
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$DropListener mLvDropListener -> ae
    com.nibdev.otrtav2.view.custom.dslv.DragSortListView$RemoveListener mLvRemoveListener -> af
    com.nibdev.otrtav2.model.scripts.ScriptExecutor$OnSendProgressChanged mOnTestScriptProgressChanged -> ag
    android.content.DialogInterface$OnDismissListener mOnTestProgressDismissListener -> ah
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    com.nibdev.otrtav2.model.scripts.Script access$0(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> a
    void access$1(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor,com.nibdev.otrtav2.model.scripts.ScriptItem) -> a
    com.nibdev.otrtav2.model.scripts.ScriptItem access$2(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> b
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener access$3(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> c
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener access$4(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> d
    com.nibdev.otrtav2.view.custom.StringInputDialog$OnTextChanged access$5(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> e
    com.nibdev.otrtav2.view.adapters.ScriptItemListAdapter access$6(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> f
    android.app.ProgressDialog access$7(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> g
    void access$8(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor,android.app.ProgressDialog) -> a
    android.content.DialogInterface$OnDismissListener access$9(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> h
    com.nibdev.otrtav2.model.scripts.ScriptExecutor access$10(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor) -> i
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$1 -> com.nibdev.otrtav2.view.b.w:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$2 -> com.nibdev.otrtav2.view.b.x:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$3 -> com.nibdev.otrtav2.view.b.y:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void selectedCodeChanged(int) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$4 -> com.nibdev.otrtav2.view.b.z:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void textChanged(java.lang.String) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$5 -> com.nibdev.otrtav2.view.b.aa:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void selectedScriptChanged(com.nibdev.otrtav2.model.scripts.Script) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$6 -> com.nibdev.otrtav2.view.b.ab:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void drop(int,int) -> a_
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$7 -> com.nibdev.otrtav2.view.b.ac:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void remove(int) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$8 -> com.nibdev.otrtav2.view.b.ad:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void sendProgressChanged(int,int) -> a
    void executionFinished() -> a
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor access$0(com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$8) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$8$1 -> com.nibdev.otrtav2.view.b.ae:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$8 this$1 -> a
    int val$total -> b
    int val$count -> c
    void run() -> run
com.nibdev.otrtav2.view.fragments.FragmentScriptEditor$9 -> com.nibdev.otrtav2.view.b.af:
    com.nibdev.otrtav2.view.fragments.FragmentScriptEditor this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.nibdev.otrtav2.view.fragments.FragmentScriptManager -> com.nibdev.otrtav2.view.b.ag:
    android.widget.GridView mGvScripts -> a
    android.widget.AdapterView$OnItemClickListener mOnScriptClickListener -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    android.widget.GridView access$0(com.nibdev.otrtav2.view.fragments.FragmentScriptManager) -> a
com.nibdev.otrtav2.view.fragments.FragmentScriptManager$1 -> com.nibdev.otrtav2.view.b.ah:
    com.nibdev.otrtav2.view.fragments.FragmentScriptManager this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentScriptManager$2 -> com.nibdev.otrtav2.view.b.ai:
    com.nibdev.otrtav2.view.fragments.FragmentScriptManager this$0 -> a
    java.lang.Long val$id -> b
    void textChanged(java.lang.String) -> a
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog -> com.nibdev.otrtav2.view.b.aj:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener mListener -> Y
    android.widget.Spinner mSpnVendor -> Z
    android.widget.Spinner mSpnModel -> aa
    android.widget.Spinner mSpnCodeType -> ab
    int mSelectedModel -> ac
    int mSelectedVendor -> ad
    int mSelectedCodeAllocation -> ae
    android.content.SharedPreferences mLastPrefs -> af
    long mRestoringModel -> ag
    android.view.View$OnClickListener mOnSetClickListener -> ah
    android.widget.AdapterView$OnItemSelectedListener mOnCodeTypeSelectedListener -> ai
    android.widget.AdapterView$OnItemSelectedListener mOnModelSelectedListener -> aj
    android.widget.AdapterView$OnItemSelectedListener mOnVendorSelectedListener -> ak
    void setOnSelectedCodeChangedListener(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onStart() -> e
    void loadDataFromArguemntsOrLastSession() -> F
    void saveDataForNextSession() -> G
    void access$0(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> a
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener access$1(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> b
    int access$2(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> c
    void access$3(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog,int) -> a
    void access$4(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog,int) -> b
    int access$5(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> d
    android.widget.Spinner access$6(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> e
    void access$7(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog,int) -> c
    int access$8(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> f
    android.widget.Spinner access$9(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> g
    long access$10(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog) -> h
    void access$11(com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog,long) -> a
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$1 -> com.nibdev.otrtav2.view.b.ak:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$2 -> com.nibdev.otrtav2.view.b.al:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$3 -> com.nibdev.otrtav2.view.b.am:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$4 -> com.nibdev.otrtav2.view.b.an:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$5 -> com.nibdev.otrtav2.view.b.ao:
    com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentSelectCodeAllocationDialog$OnSelectedCodeChangedListener -> com.nibdev.otrtav2.view.b.ap:
    void selectedCodeChanged(int) -> a
com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog -> com.nibdev.otrtav2.view.b.aq:
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener mListener -> Y
    int mSelectedScriptId -> Z
    android.widget.Spinner mSpnSkript -> aa
    android.view.View$OnClickListener mOnSetClickListener -> ab
    android.widget.AdapterView$OnItemSelectedListener mOnScriptSelectedListener -> ac
    void setOnSelectedScriptChangedListener(com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener) -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onStart() -> e
    int access$0(com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog) -> a
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener access$1(com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog) -> b
    void access$2(com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog,int) -> a
com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$1 -> com.nibdev.otrtav2.view.b.ar:
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$2 -> com.nibdev.otrtav2.view.b.as:
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$3 -> com.nibdev.otrtav2.view.b.at:
    com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.nibdev.otrtav2.view.fragments.FragmentSelectScriptDialog$OnSelectedScriptChangedListener -> com.nibdev.otrtav2.view.b.au:
    void selectedScriptChanged(com.nibdev.otrtav2.model.scripts.Script) -> a
com.nibdev.otrtav2.view.fragments.FragmentSettings -> com.nibdev.otrtav2.view.b.av:
    com.nibdev.otrtav2.service.OTRTAService mService -> a
    android.preference.EditTextPreference mEtFrameCompare -> b
    android.preference.EditTextPreference mEtFreqCompare -> c
    android.preference.EditTextPreference mEtDelayFactor -> d
    com.nibdev.otrtav2.view.fragments.FragmentSettings$CalculateFilterTask mFilterTask -> e
    android.preference.Preference$OnPreferenceClickListener mOnDbPurgeClickListener -> f
    android.preference.Preference$OnPreferenceClickListener mOnDbExportClickListener -> g
    android.preference.Preference$OnPreferenceClickListener mOnDbImportClickListener -> h
    void onCreate(android.os.Bundle) -> onCreate
    void setService(com.nibdev.otrtav2.service.OTRTAService) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void setSummaryMinMaxLearnTimeout() -> a
    void setSummaryFreqCompare() -> b
    void setSummaryFrameCompare() -> c
    void setSummaryDelayFactor() -> d
    com.nibdev.otrtav2.service.OTRTAService access$0(com.nibdev.otrtav2.view.fragments.FragmentSettings) -> a
com.nibdev.otrtav2.view.fragments.FragmentSettings$1 -> com.nibdev.otrtav2.view.b.aw:
    com.nibdev.otrtav2.view.fragments.FragmentSettings this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.nibdev.otrtav2.view.fragments.FragmentSettings$2 -> com.nibdev.otrtav2.view.b.ax:
    com.nibdev.otrtav2.view.fragments.FragmentSettings this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.nibdev.otrtav2.view.fragments.FragmentSettings$3 -> com.nibdev.otrtav2.view.b.ay:
    com.nibdev.otrtav2.view.fragments.FragmentSettings this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.nibdev.otrtav2.view.fragments.FragmentSettings$CalculateFilterTask -> com.nibdev.otrtav2.view.b.az:
    android.app.ProgressDialog mCalcProg -> b
    com.nibdev.otrtav2.view.fragments.FragmentSettings this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Integer[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.nibdev.otrtav2.view.fragments.FragmentVendorGrid -> com.nibdev.otrtav2.view.b.ba:
    android.widget.GridView mGvVendors -> a
    android.widget.AutoCompleteTextView mActvSearch -> b
    com.nibdev.otrtav2.view.adapters.SearchGridAdapter mSearchAdapter -> c
    com.nibdev.otrtav2.view.adapters.VendorGridAdapter mVendorAdapter -> d
    boolean mSearchWasVisible -> e
    android.widget.AdapterView$OnItemClickListener mOnVendorClickListener -> f
    android.widget.AdapterView$OnItemClickListener mOnModelClickListener -> g
    android.text.TextWatcher mOnSearchTextWatcher -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onDestroyView() -> g
    boolean handlesBackKey() -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void showSearch() -> b
    void hideSearch() -> c
    android.widget.AutoCompleteTextView access$0(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> a
    com.nibdev.otrtav2.view.adapters.SearchGridAdapter access$1(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> b
    android.widget.GridView access$2(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> c
    com.nibdev.otrtav2.view.adapters.VendorGridAdapter access$3(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> d
    android.widget.AdapterView$OnItemClickListener access$4(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> e
    android.widget.AdapterView$OnItemClickListener access$5(com.nibdev.otrtav2.view.fragments.FragmentVendorGrid) -> f
com.nibdev.otrtav2.view.fragments.FragmentVendorGrid$1 -> com.nibdev.otrtav2.view.b.bb:
    com.nibdev.otrtav2.view.fragments.FragmentVendorGrid this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentVendorGrid$2 -> com.nibdev.otrtav2.view.b.bc:
    com.nibdev.otrtav2.view.fragments.FragmentVendorGrid this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.nibdev.otrtav2.view.fragments.FragmentVendorGrid$3 -> com.nibdev.otrtav2.view.b.bd:
    com.nibdev.otrtav2.view.fragments.FragmentVendorGrid this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.nibdev.otrtav2.widgets.SingleWidgetConfiguration -> com.nibdev.otrtav2.widgets.a:
    int mType -> a
    int mWidgetID -> b
    int mAllocationID -> c
    java.lang.String mTopText -> d
    java.lang.String mBottomText -> e
    java.lang.String mConfigText -> f
    int getWidgetID() -> a
    void setWidgetID(int) -> a
    int getAllocationID() -> b
    void setAllocationID(int) -> b
    int getType() -> c
    void setType(int) -> c
    java.lang.String getTopText() -> d
    void setTopText(java.lang.String) -> a
    java.lang.String getBottomText() -> e
    void setBottomText(java.lang.String) -> b
    java.lang.String getConfigText() -> f
    void setConfigText(java.lang.String) -> c
com.nibdev.otrtav2.widgets.WidgetSingleProvider -> com.nibdev.otrtav2.widgets.WidgetSingleProvider:
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int) -> a
